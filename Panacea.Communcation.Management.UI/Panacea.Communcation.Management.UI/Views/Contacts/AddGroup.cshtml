@model Panacea.Communcation.Management.UI.Models.GroupInfoVM

@{
    ViewBag.Title = "Add Group";
}

@section Styles {
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
}

@Html.Partial("_GroupInfo", Model)

@section Scripts {
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/plugins/chosen")
    <script src="~/Scripts/knockout-3.4.2.js"></script>
    <script src="~/Scripts/Custom/global.js"></script>
    <script type="text/javascript">

        //Represents a selected contact that is shown in the table
        function SingleContact(id, name, email, jobTitle, organisation) {
            var self = this;
            self.Id = id;
            self.Name = name;
            self.Email = email;
            self.JobTitle = jobTitle;
            self.Organisation = organisation;
        }

        function SingleOrganisation(id, name, contactCount, country) {
            var self = this;
            self.Id = id;
            self.Name = name;
            self.ContactCount = contactCount;
            self.Country = country;
        }

        function AddGroupViewModel() {
            var self = this;
            self.saveCompleted = ko.observable(false);
            self.sending = ko.observable(false);

            self.availableOptions = [];

            // For Organisation Search Dropdown
            self.selectedOrgValue = ko.observable();
            self.searchOrgString = ko.observable();

            // For Contact Search Dropdown
            self.selectedContactValue = ko.observable();
            self.searchString = ko.observable();

            // Organisation Drop Down Change Event
            self.selectedOrgValue.subscribe(function(newValue) {

                var url = '@Url.Action("GetOrganisationInfo")/' + newValue;

                $.ajax({
                    url: url,
                    dataType: "json",
                    success: function(data) {
                        var currentOrganisations = ko.toJS(self.GroupInfo.Organisations); // convert to normal array
                        var isOrganisationAlreadyAdded = currentOrganisations.filter(function(item) {
                            return (item.Id == newValue);
                        }); // see if version is already added to list

                        if (isOrganisationAlreadyAdded.length == 0) {
                            self.GroupInfo.Organisations.push(new SingleOrganisation(newValue,
                                data.Name,
                                data.ContactCount,
                                data.Country));
                        }
                    }
                });
            });

            // Contact Drop Down Change Event
            self.selectedContactValue.subscribe(function(newValue) {
                //alert("Contact Changed - " + newValue);
                var url = '@Url.Action("GetContactInfo")/' + newValue;

                $.ajax({
                    url: url,
                    dataType: "json",
                    success: function(data) {
                        var currentContacts = ko.toJS(self.GroupInfo.Contacts); // convert to normal array
                        var isContactAlreadyAdded = currentContacts.filter(function(item) {
                            return (item.Id == newValue);
                        }); // see if version is already added to list

                        if (isContactAlreadyAdded.length == 0) {
                            self.GroupInfo.Contacts.push(new SingleContact(newValue,
                                data.Name,
                                data.Email,
                                data.JobTitle,
                                data.Organisation));
                        }
                    }
                });
            });

            // Search organisation when you type
            self.callAjaxOrganisation = function() {
                var stringLength = self.searchOrgString().length;

                if (stringLength > 2) {

                    var url = '@Url.Action("SearchOrganisations")?searchOrgString=' + self.searchOrgString();

                    $.ajax({
                        url: url,
                        dataType: "json",
                        success: function(data) {

                            $('#OrganisationSearch').find('option').remove().end(); // Empty Select List

                            // Fill Up Select List
                            var list = $("#OrganisationSearch");
                            list.append(new Option("", "")); // Add Empty Option (Needed so search field is active)

                            $.each(data,
                                function(index, item) {
                                    list.append(new Option(item.name, item.id));
                                });

                            $('#OrganisationSearch').trigger("chosen:updated");
                            $('#OrganisationSearch_chosen').find('input').val(self.searchOrgString());
                        }

                    }); // end Ajax
                } // end If
            }

            // Search contact when you type
            self.callAjax = function() {
                var stringLength = self.searchString().length;

                if (stringLength > 2) {

                    var url = '@Url.Action("SearchContacts")?searchString=' + self.searchString();

                    $.ajax({
                        url: url,
                        dataType: "json",
                        success: function(data) {

                            $('#ContactSearch').find('option').remove().end(); // Empty Select List

                            // Fill Up Select List
                            var list = $("#ContactSearch");
                            list.append(new Option("", "")); // Add Empty Option (Needed so search field is active)

                            $.each(data,
                                function(index, item) {
                                    list.append(new Option(item.name, item.id));
                                });

                            $('#ContactSearch').trigger("chosen:updated");
                            $('#ContactSearch_chosen').find('input').val(self.searchString());
                        }

                    }); // end Ajax
                } // end If
            }

            self.removeOrganisation = function (org) { self.GroupInfo.Organisations.remove(org) }
            self.removeContact = function(contact) { self.GroupInfo.Contacts.remove(contact) }

            self.GroupInfo = {
                Name: ko.observable(),
                Description: ko.observable(),
                Contacts: ko.observableArray(),
                Organisations: ko.observableArray()
            };

            self.validateAndSave = function (form) {

                if (!$(form).valid()) {
                    return false;
                }

               self.sending(true);

                //alert(ko.toJSON(self.GroupInfo));

                $.ajax({
                    url: '@Url.Action("AddGroup")',
                    type: 'post',
                    //contentType: 'application/x-www-form-urlencoded',
                    //data: ko.toJS(self.GroupInfo),
                    contentType: 'application/json',          //Doesnt Work with AntiForgeryToken
                    data: ko.toJSON(self.GroupInfo),         //Doesnt Work with AntiForgeryToken
                    cache: false,
                    success: function (response) {
                        self.successfulSave();
                    },
                    error: function (response) {
                        self.errorSave();
                    },
                    complete: function (response) {
                        self.ajaxComplete();
                    }
                });
            }

            self.successfulSave = function () {
                self.saveCompleted(true);
                location.href = '@Url.Action("Groups", "Contacts")';
            };

            self.errorSave = function () {
                $('.fadeInRight').prepend('<div class="alert alert-danger m-t"><strong>Error!</strong> There was an error saving the record.</div>');
            };

            self.ajaxComplete = function () {
                self.sending(false);
            };

        }

        $(document).ready(function () {
            $('.chosen-single').find('span').html('Type to Search');

            $('#ContactSearch_chosen').find('input')
                .attr("data-bind", "textInput: searchString, event: { input: callAjax }");

            $('#OrganisationSearch_chosen').find('input')
                .attr("data-bind", "textInput: searchOrgString, event: { input: callAjaxOrganisation }");

            var viewModel = new AddGroupViewModel();
            ko.applyBindings(viewModel);
        });

    </script>
    @Scripts.Render("~/bundles/custom")
}
